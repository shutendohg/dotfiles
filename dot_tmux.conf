##### Powerline ################################################################
# Load Powerline's tmux bindings if the Python package "powerline" is installed.
if-shell '[ -n "$(python3 - <<PY
import importlib.util, pathlib, sys
s = importlib.util.find_spec("powerline")
print(pathlib.Path(list(s.submodule_search_locations)[0])/"bindings/tmux/powerline.conf" if s else "")
PY
)" ]' \
  "run-shell 'PL=$(python3 - <<PY
import importlib.util, pathlib, sys
s = importlib.util.find_spec(\"powerline\")
print(pathlib.Path(list(s.submodule_search_locations)[0])/\"bindings/tmux/powerline.conf\" if s else \"\")
PY
); [ -f \"$PL\" ] && source-file \"$PL\"'"

# Start powerline daemon quietly
run-shell "powerline-daemon -q"

##### Prefix & Reload ##########################################################
# Change prefix from C-b to C-j
unbind-key C-b
set-option -g prefix C-j

# Reload config quickly
bind r source-file ~/.tmux.conf \; display-message 'Reloaded ~/.tmux.conf'

##### Pane / Window ############################################################
# Split / new window in the current pane's working directory
unbind m
bind m split-window -h -c '#{pane_current_path}'         # horizontal split (preserve cwd)
bind - split-window -v -c '#{pane_current_path}'         # vertical split (preserve cwd)
bind c new-window -c '#{pane_current_path}'              # new window (preserve cwd)

# Kill all other panes in the current window
bind -r e kill-pane -a

# Move across panes (vim-style)
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Window navigation
bind -r g previous-window
bind -r T next-window
bind -r w kill-window
bind Tab last-window                                     # toggle between the last two windows

# Quick tree-based navigator (zoom-aware)
bind s choose-tree -Zw

# Temporary zoom the current pane (toggle)
bind z resize-pane -Z

# Layout shortcuts (cycle and specific layouts)
bind Space next-layout
bind H select-layout main-horizontal
bind V select-layout main-vertical
bind E select-layout even-horizontal
bind M select-layout even-vertical
bind F select-layout tiled

# Resize panes with arrow keys (holdable due to -r)
bind -r Left  resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Up    resize-pane -U 2
bind -r Down  resize-pane -D 2

# Mark + move panes across windows
bind A select-pane -m                                    # mark current pane
bind J join-pane  -s '{marked}'                          # run in the target window
bind S swap-pane  -s '{marked}'
bind B break-pane -d                                     # detach into a new window

# One-off synchronized input across panes (toggle)
bind y setw synchronize-panes \; display-message 'sync: #{?synchronize-panes,on,off}'

# Better behavior with multiple attached clients (e.g., two terminals)
set -g aggressive-resize on

# Visual hint when background activity occurs in another window
set -g monitor-activity on
set -g visual-activity on

# Keep window numbers compact
set -g renumber-windows on

##### Open current dir (macOS/Linux) ##########################################
# Open the current pane's path in the system file browser (macOS or Linux)
unbind o
bind o run-shell "sh -c 'if command -v xdg-open >/dev/null 2>&1; then xdg-open \"#{pane_current_path}\"; elif command -v open >/dev/null 2>&1; then open \"#{pane_current_path}\"; fi' >/dev/null 2>&1 &"

##### Colors / Status ##########################################################
# Truecolor and statusline tweaks (Powerline-friendly)
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g status-right-length 150
set -g status-right '#[fg=colour59]#[fg=colour255,bg=colour59] #[fg=colour254,bold]#[fg=colour16,bg=colour254,bold] #h '
set -g status-left-length 60
set -g status-left '#[fg=colour235,bg=colour252,bold] #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g status-interval 2

# Vi-style keys in copy-mode and prompts
set-window-option -g mode-keys vi

##### Mouse ####################################################################
# Mouse support for selecting panes and scrolling
set -g mouse on
bind-key -T edit-mode-vi WheelUpPane   send-keys -X scroll-up
bind-key -T edit-mode-vi WheelDownPane send-keys -X scroll-down

##### Clipboard (Linux/macOS) ##################################################
# Integrate tmux copy with system clipboard
set -g set-clipboard on
# Linux: requires xclip; macOS: pbcopy. The wrapper picks whichever exists.
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "sh -c 'command -v pbcopy >/dev/null 2>&1 && pbcopy || xclip -in -selection clipboard'"
